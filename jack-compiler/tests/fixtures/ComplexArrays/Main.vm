function Main.main 3
// let a = Array.new(10)
push constant 10
call Array.new 1
pop local 0
// let b = Array.new(5)
push constant 5
call Array.new 1
pop local 1
// let c = Array.new(1)
push constant 1
call Array.new 1
pop local 2
// let a[3] = 2
push constant 2
push constant 3
push local 0
add
pop pointer 1
pop that 0
// let a[4] = 8
push constant 8
push constant 4
push local 0
add
pop pointer 1
pop that 0
// let a[5] = 4
push constant 4
push constant 5
push local 0
add
pop pointer 1
pop that 0
// let b[a[3]] = a[3] + 3
push constant 3
push local 0
add
pop pointer 1
push that 0
push constant 3
add
push constant 3
push local 0
add
pop pointer 1
push that 0
push local 1
add
pop pointer 1
pop that 0
// let a[b[a[3]]] = a[a[5]] * b[7 - a[3] - Main.double(2) + 1]
push constant 5
push local 0
add
pop pointer 1
push that 0
push local 0
add
pop pointer 1
push that 0
push constant 7
push constant 3
push local 0
add
pop pointer 1
push that 0
sub
push constant 2
call Main.double 1
sub
push constant 1
add
push local 1
add
pop pointer 1
push that 0
call Math.multiply 2
push constant 3
push local 0
add
pop pointer 1
push that 0
push local 1
add
pop pointer 1
push that 0
push local 0
add
pop pointer 1
pop that 0
// let c[0] = null
push constant 0
push constant 0
push local 2
add
pop pointer 1
pop that 0
// let c = c[0]
push constant 0
push local 2
add
pop pointer 1
push that 0
pop local 2
// Output.printString(Test 1: expected result: 5; actual result: )
push constant 43
call String.new 1
push constant 84
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 53
call String.appendChar 2
push constant 59
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
// discard return value of the void function
pop temp 0
// Output.printInt(b[2])
push constant 2
push local 1
add
pop pointer 1
push that 0
call Output.printInt 1
// discard return value of the void function
pop temp 0
// Output.println()
call Output.println 0
// discard return value of the void function
pop temp 0
// Output.printString(Test 2: expected result: 40; actual result: )
push constant 44
call String.new 1
push constant 84
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 50
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 52
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 59
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
// discard return value of the void function
pop temp 0
// Output.printInt(a[5])
push constant 5
push local 0
add
pop pointer 1
push that 0
call Output.printInt 1
// discard return value of the void function
pop temp 0
// Output.println()
call Output.println 0
// discard return value of the void function
pop temp 0
// Output.printString(Test 3: expected result: 0; actual result: )
push constant 43
call String.new 1
push constant 84
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 51
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 59
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
// discard return value of the void function
pop temp 0
// Output.printInt(c)
push local 2
call Output.printInt 1
// discard return value of the void function
pop temp 0
// Output.println()
call Output.println 0
// discard return value of the void function
pop temp 0
// let c = null
push constant 0
pop local 2
// if (c = null) { (7 statements...) }
push local 2
push constant 0
eq
if-goto LABEL_1
goto LABEL_2
label LABEL_1
// Main.fill(a, 10)
push local 0
push constant 10
call Main.fill 2
// discard return value of the void function
pop temp 0
// let c = a[3]
push constant 3
push local 0
add
pop pointer 1
push that 0
pop local 2
// let c[1] = 33
push constant 33
push constant 1
push local 2
add
pop pointer 1
pop that 0
// let c = a[7]
push constant 7
push local 0
add
pop pointer 1
push that 0
pop local 2
// let c[1] = 77
push constant 77
push constant 1
push local 2
add
pop pointer 1
pop that 0
// let b = a[3]
push constant 3
push local 0
add
pop pointer 1
push that 0
pop local 1
// let b[1] = b[1] + c[1]
push constant 1
push local 1
add
pop pointer 1
push that 0
push constant 1
push local 2
add
pop pointer 1
push that 0
add
push constant 1
push local 1
add
pop pointer 1
pop that 0
label LABEL_2
// Output.printString(Test 4: expected result: 77; actual result: )
push constant 44
call String.new 1
push constant 84
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 52
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 55
call String.appendChar 2
push constant 55
call String.appendChar 2
push constant 59
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
// discard return value of the void function
pop temp 0
// Output.printInt(c[1])
push constant 1
push local 2
add
pop pointer 1
push that 0
call Output.printInt 1
// discard return value of the void function
pop temp 0
// Output.println()
call Output.println 0
// discard return value of the void function
pop temp 0
// Output.printString(Test 5: expected result: 110; actual result: )
push constant 45
call String.new 1
push constant 84
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 53
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 59
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
// discard return value of the void function
pop temp 0
// Output.printInt(b[1])
push constant 1
push local 1
add
pop pointer 1
push that 0
call Output.printInt 1
// discard return value of the void function
pop temp 0
// Output.println()
call Output.println 0
// discard return value of the void function
pop temp 0
// return
push constant 0
return
function Main.double 0
// return a * 2
push argument 0
push constant 2
call Math.multiply 2
return
function Main.fill 0
// while (size > 0) { (2 statements...) }
label LABEL_3
push argument 1
push constant 0
gt
not
if-goto LABEL_4
// let size = size - 1
push argument 1
push constant 1
sub
pop argument 1
// let a[size] = Array.new(3)
push constant 3
call Array.new 1
push argument 1
push argument 0
add
pop pointer 1
pop that 0
goto LABEL_3
label LABEL_4
// return
push constant 0
return
